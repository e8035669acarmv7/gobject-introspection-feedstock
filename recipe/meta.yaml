{% set name = "gobject-introspection" %}
{% set version = "1.78.0" %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}
{% set prefix = 'Library/' if win else '' %}
{% set local_glib_pin = '>=2.78' %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://download.gnome.org/sources/{{ name }}/{{ '.'.join(version.split('.')[:2]) }}/{{ name }}-{{ version }}.tar.xz
  sha256: 84f5bd2038bd52abbce74a639832c5b46a2d17e9c5a8ae14f9788e8516c04166
  patches:
    - cross-compile.patch
    - test-fix.patch  # [linux]
    # https://gitlab.gnome.org/GNOME/gobject-introspection/-/merge_requests/265
    - pkg-config.patch
    # workaround for conflicting "import ast", should not be necessary once PyPy is updated
    - 0001-Don-t-add-build_root-giscanner-to-PYTHONPATH-for-run.patch
    - ppc64le-math.patch  # [ppc64le]

build:
  number: 0
  skip: true  # [py<35]

requirements:
  build:
    - python {{ python }}
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ posix }}bison
    - {{ posix }}flex
    - meson >=0.55.3
    - ninja
    - {{ posix }}patch
    - {{ native }}pkg-config
    - {{ compiler('c') }}
    # This dep is intentionally written twice; the second time allows
    # conda-build to add a global pin if needed.
    - glib {{ local_glib_pin }}  # [build_platform != target_platform]
    - glib                       # [build_platform != target_platform]
    - cairo                      # [build_platform != target_platform]
    - libffi                     # [build_platform != target_platform]
  host:
    - cairo
    # Intentional double-listing for conda-build global pinning:
    - glib {{ local_glib_pin }}
    - glib
    - libffi
    - python

outputs:
  - name: libgirepository
    files:
      - {{ prefix }}lib/girepository-1.0
      - {{ prefix }}lib/libgirepository-1.0*  # [not win]
      - {{ prefix }}bin/girepository-1.0*.dll  # [win]
      - {{ prefix }}lib/girepository-1.0.lib  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
      host:
        - cairo
        # Intentional double-listing for conda-build global pinning:
        - glib {{ local_glib_pin }}
        - glib
        - libffi
      run:
        - libffi
    test:
      commands:
        - test -f $PREFIX/lib/libgirepository-1.0${SHLIB_EXT}  # [not win]
        - if not exist %PREFIX%\Library\bin\girepository-1.0-1.dll exit 1  # [win]
        - if not exist %PREFIX%\Library\lib\girepository-1.0.lib exit 1  # [win]

  - name: g-ir-build-tools
    files:
      - {{ prefix }}bin/g-ir-annotation-tool
      - {{ prefix }}bin/g-ir-scanner
      - {{ prefix }}lib/gobject-introspection
      - {{ prefix }}share/gobject-introspection-1.0/*
      - {{ prefix }}share/man/man1/g-ir-scanner.1
    requirements:
      build:
        - {{ compiler('c') }}
        # conda-build needs native python to make .pyc files
        - python  # [build_platform != target_platform]
      host:
        # Intentional double-listing for conda-build global pinning:
        - glib {{ local_glib_pin }}
        - glib
        - python
      run:
        - pkg-config
        - python
    test:
      commands:
        - g-ir-scanner --help  # [not win]
        - python "%PREFIX%\\Library\\bin\\g-ir-scanner" --help  # [win]

  - name: g-ir-host-tools
    files:
      - {{ prefix }}bin/g-ir-compiler*
      - {{ prefix }}bin/g-ir-generate*
      - {{ prefix }}bin/g-ir-inspect*
      - {{ prefix }}share/man/man1/g-ir-compiler.1
      - {{ prefix }}share/man/man1/g-ir-generate.1
    requirements:
      build:
        - {{ compiler('c') }}
      host:
        # Intentional double-listing for conda-build global pinning:
        - glib {{ local_glib_pin }}
        - glib
        - libffi
        - {{ pin_subpackage('libgirepository', exact=True) }}
      run:
        - {{ pin_subpackage('libgirepository', exact=True) }}
    test:
      commands:
        - g-ir-compiler --help

  - name: gobject-introspection
    files:
      - {{ prefix }}include/gobject-introspection-1.0
      - {{ prefix }}lib/pkgconfig/gobject-introspection*.pc
      - {{ prefix }}libexec/gi-cross-launcher-load.sh  # [not win]
      - {{ prefix }}libexec/gi-cross-launcher-save.sh  # [not win]
      - {{ prefix }}share/aclocal/introspection.m4
      - {{ prefix }}share/gir-1.0
      - {{ prefix }}share/gobject-introspection-1.0/tests
    requirements:
      # include build and host requirements to get proper build string
      build:
        - {{ compiler('c') }}
      host:
        - cairo
        # Intentional double-listing for conda-build global pinning:
        - glib {{ local_glib_pin }}
        - glib
        - libffi
        - python
      run:
        - {{ pin_subpackage('g-ir-build-tools', exact=True) }}
        - {{ pin_subpackage('g-ir-host-tools', exact=True) }}
        - {{ pin_subpackage('libgirepository', exact=True) }}
        - libffi
        - python
    test:
      requires:
        - pkg-config
      commands:
        # check that g-ir-scanner can be found through pkg-config (used by downstream builds)
        - test -f `pkg-config --variable=g_ir_scanner --dont-define-prefix gobject-introspection-1.0`  # [unix]
        - for /f "usebackq tokens=*" %%a in (`pkg-config --variable=g_ir_scanner --dont-define-prefix gobject-introspection-1.0`) do if not exist "%%a" exit 1  # [win]

about:
  home: https://wiki.gnome.org/action/show/Projects/GObjectIntrospection
  license: LGPL-2.0-or-later
  license_family: LGPL
  license_file: COPYING
  summary: Middleware for binding GObject-based code to other languages.

extra:
  feedstock-name: {{ name|lower }}
  recipe-maintainers:
    - pkgw
    - ocefpaf
    - ryanvolz
    - scopatz
    - tschoonj
